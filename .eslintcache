[{"/home/kwame/regs/taskit/src/index.tsx":"1","/home/kwame/regs/taskit/src/reportWebVitals.ts":"2","/home/kwame/regs/taskit/src/App.tsx":"3","/home/kwame/regs/taskit/src/components/sidebar/sideBar.tsx":"4","/home/kwame/regs/taskit/src/components/card/HomeCard.tsx":"5","/home/kwame/regs/taskit/src/components/home/Home.tsx":"6","/home/kwame/regs/taskit/src/components/navbar/navBar.tsx":"7","/home/kwame/regs/taskit/src/components/tasks/taskCard.tsx":"8","/home/kwame/regs/taskit/src/components/projects_home/projectsHome.tsx":"9","/home/kwame/regs/taskit/src/components/projects_home/projectsHomeSideBar.tsx":"10","/home/kwame/regs/taskit/src/components/projects_home/projectsCard.tsx":"11","/home/kwame/regs/taskit/src/components/login_register/login.tsx":"12","/home/kwame/regs/taskit/src/components/login_register/register.tsx":"13","/home/kwame/regs/taskit/src/components/login_register/logout.tsx":"14","/home/kwame/regs/taskit/src/components/navbar/bottomNavBar.tsx":"15","/home/kwame/regs/taskit/src/components/projects_home/projectDetail.tsx":"16","/home/kwame/regs/taskit/src/components/graphbox/graphBox.tsx":"17","/home/kwame/regs/taskit/src/components/tasks/tasksList.tsx":"18","/home/kwame/regs/taskit/src/components/homepage/userHomepage.tsx":"19","/home/kwame/regs/taskit/src/components/team_card/teamCard.tsx":"20","/home/kwame/regs/taskit/src/components/modals/createTaskModal.tsx":"21","/home/kwame/regs/taskit/src/components/tasks/taskStrip.tsx":"22","/home/kwame/regs/taskit/src/components/modals/addMember.tsx":"23"},{"size":1759,"mtime":1608546993039,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1607122708047,"results":"26","hashOfConfig":"25"},{"size":556,"mtime":1607122708039,"results":"27","hashOfConfig":"25"},{"size":8985,"mtime":1608550453988,"results":"28","hashOfConfig":"25"},{"size":3387,"mtime":1608569100485,"results":"29","hashOfConfig":"25"},{"size":1923,"mtime":1607437633409,"results":"30","hashOfConfig":"25"},{"size":972,"mtime":1607158212678,"results":"31","hashOfConfig":"25"},{"size":1438,"mtime":1607605965580,"results":"32","hashOfConfig":"25"},{"size":2788,"mtime":1607613116827,"results":"33","hashOfConfig":"25"},{"size":6795,"mtime":1608203843346,"results":"34","hashOfConfig":"25"},{"size":5948,"mtime":1607616600755,"results":"35","hashOfConfig":"25"},{"size":2598,"mtime":1608466230631,"results":"36","hashOfConfig":"25"},{"size":3193,"mtime":1608467364132,"results":"37","hashOfConfig":"25"},{"size":351,"mtime":1607365775613,"results":"38","hashOfConfig":"25"},{"size":1734,"mtime":1608213763212,"results":"39","hashOfConfig":"25"},{"size":7787,"mtime":1608581365453,"results":"40","hashOfConfig":"25"},{"size":2073,"mtime":1608055389022,"results":"41","hashOfConfig":"25"},{"size":3422,"mtime":1608548910931,"results":"42","hashOfConfig":"25"},{"size":993,"mtime":1607985599275,"results":"43","hashOfConfig":"25"},{"size":3656,"mtime":1608581416590,"results":"44","hashOfConfig":"25"},{"size":7988,"mtime":1608492797364,"results":"45","hashOfConfig":"25"},{"size":3198,"mtime":1608645931407,"results":"46","hashOfConfig":"25"},{"size":3430,"mtime":1608645592761,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1wzv25q",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/home/kwame/regs/taskit/src/index.tsx",["106","107"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Sidebar from \"./components/sidebar/sideBar\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\nimport ProjectsList from \"./components/projects_home/projectsHome\";\nimport Login from \"./components/login_register/login\";\nimport Register from \"./components/login_register/register\";\nimport Logout from \"./components/login_register/logout\";\nimport ProjectDetail from \"./components/projects_home/projectDetail\";\nimport TasksList from \"./components/tasks/tasksList\";\nimport UserHomePage from \"./components/homepage/userHomepage\";\nimport AddMemberModal from \"./components/modals/addMember\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/projects\" component={ProjectsList} exact />\n        <Route path=\"/login\" component={Login} exact />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/logout\" component={Logout} exact />\n        <Route path=\"/project/:id\" component={ProjectDetail} exact />\n        <Route path=\"/project/:id/tasks\" component={TasksList} exact />\n        <Route path=\"/home\" component={UserHomePage} exact />\n        <Route path=\"/modal\" component={AddMemberModal} exact />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["108","109"],"/home/kwame/regs/taskit/src/reportWebVitals.ts",[],"/home/kwame/regs/taskit/src/App.tsx",[],"/home/kwame/regs/taskit/src/components/sidebar/sideBar.tsx",["110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport style from \"./SideBarHome.module.sass\";\nimport HomeCard from \"../card/HomeCard\";\nimport cards_style from \"../team_card/teamCard.module.sass\";\n\nfunction Sidebar(props: any) {\n  const [title, setTitle] = useState(\"\");\n  let num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  const [dark, setDark] = useState(\"\");\n\n  function showNav() {\n    let nav = document.querySelectorAll(\".nav\")[0] as HTMLDivElement;\n    nav.style.display = \"block\";\n    console.log(\"sd\");\n  }\n\n  function closeNav() {\n    // let con = document.getElementsByClassName(style[\"head\"]);\n    // console.log(con);\n    let nav = document.querySelector(`.${style.nav}`) as HTMLDivElement;\n    console.log(style.nav);\n    nav.style.width = \"0\";\n    nav.style.padding = \"0\";\n    nav.style.boxShadow = \"none\";\n  }\n\n  useEffect(() => {\n    let theme = window.localStorage.getItem(\"theme\");\n    if (theme == \"dark\") {\n      document.body.classList.add(\"dark-body\");\n      let nav = document.getElementsByClassName(style.nav)[0];\n      let cards = document.querySelectorAll(\n        `.${cards_style[\"team-card-body\"]}`\n      );\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].classList.add(\"darko\");\n      }\n      // cards.forEach((card))\n      //card?.classList.add(\"darko\");\n      let allLinks = (document.querySelectorAll(\n        `.${style[\"sec-links\"]}`\n      ) as any) as Array<HTMLAnchorElement>;\n      let allInsights = (document.querySelectorAll(\n        `.${style[\"insight-elements\"]}`\n      ) as any) as Array<HTMLAnchorElement>;\n      allLinks.forEach((link: any) => {\n        link.classList.add(\"dark-link\");\n      });\n      allInsights.forEach((insight: any) => {\n        insight.classList.add(\"dark-insight\");\n      });\n      nav.classList.add(\"dark-nav\");\n      window.localStorage.setItem(\"theme\", \"dark\");\n      setDark(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark-body\");\n      let nav = document.getElementsByClassName(style.nav)[0];\n      let cards = document.querySelectorAll(\n        `.${cards_style[\"team-card-body\"]}`\n      );\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].classList.remove(\"darko\");\n      }\n      let allLinks = (document.querySelectorAll(\n        `.${style[\"sec-links\"]}`\n      ) as any) as Array<HTMLAnchorElement>;\n      let allInsights = (document.querySelectorAll(\n        `.${style[\"insight-elements\"]}`\n      ) as any) as Array<HTMLAnchorElement>;\n\n      allLinks.forEach((link: any) => {\n        link.classList.remove(\"dark-link\");\n      });\n      allInsights.forEach((insight: any) => {\n        insight.classList.remove(\"dark-insight\");\n      });\n      nav.classList.remove(\"dark-nav\");\n      window.localStorage.setItem(\"theme\", \"light\");\n      setDark(\"light\");\n    }\n  }, [dark]);\n\n  function setDarkMode() {\n    let theme = window.localStorage.getItem(\"theme\");\n    console.log(theme);\n    console.log(dark);\n    if (theme == \"dark\") {\n      window.localStorage.setItem(\"theme\", \"light\");\n      setDark(\"light\");\n    } else {\n      window.localStorage.setItem(\"theme\", \"dark\");\n      setDark(\"dark\");\n    }\n  }\n\n  return (\n    <div>\n      <div className={`${style.nav} nav`}>\n        <div className={style.close}>\n          <button onClick={closeNav} className={style[\"close-button\"]}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n\n        <div className={style.head}>\n          <span className={`material-icons ${style[\"icon-chart\"]}`}>\n            stacked_line_chart\n          </span>\n          <div>Projet</div>\n        </div>\n\n        <div className={style[\"nav-items\"]}>\n          <Link\n            to={`/project/${props.projectId}`}\n            className={style[\"sec-links\"]}\n          >\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">assessment</span>\n              Dashboard\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">extension</span>\n              Analytics\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                people_outline\n              </span>\n              Contributors\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">extension</span>\n              Features\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">notes</span>\n              Notes\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">timeline</span>\n              Timelines\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">notes</span>\n              Documentation\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">groups</span>\n              Teams\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">local_atm</span>\n              Budget\n            </div>\n          </Link>\n          <Link\n            to={`/project/${props.projectId}/tasks`}\n            className={style[\"sec-links\"]}\n          >\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                calendar_today\n              </span>\n              Project Tasks\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">gavel</span>\n              Rules\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                speaker_notes\n              </span>\n              Personal notes\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={`${style[\"elements\"]}`}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                calendar_today\n              </span>\n              Personal Tasks\n            </div>\n          </Link>\n        </div>\n\n        <hr className={\"ruler\"} />\n        <div className={style[\"insights\"]}>\n          <h3>Insights</h3>\n\n          <div className={style[\"container\"]}>\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={`${style[\"insight-elements\"]} links`}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  all_inbox\n                </span>\n                Inbox\n              </div>\n            </Link>\n\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={`${style[\"insight-elements\"]} links`}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  all_inbox\n                </span>\n                Mail\n                <span id={style[\"notifications\"]}>3</span>\n              </div>\n            </Link>\n\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={`${style[\"insight-elements\"]} links`}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  notifications_none\n                </span>\n                Notification\n              </div>\n            </Link>\n          </div>\n        </div>\n        <hr className={style[\"ruler\"]} />\n        <div className={style[\"insights\"]}>\n          <h3>Theme</h3>\n          <div className={style[\"theme-container\"]}>\n            <div className={style[\"theme-elements\"]}>\n              <button onClick={setDarkMode} className=\"dark\">\n                Toggle Dark Mode\n              </button>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <button className={style[\"logout-button\"]}>\n          <span className=\"material-icons\">power_settings_new</span>\n          <title>Logout</title>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/kwame/regs/taskit/src/components/card/HomeCard.tsx",["116","117","118"],"/home/kwame/regs/taskit/src/components/home/Home.tsx",[],"/home/kwame/regs/taskit/src/components/navbar/navBar.tsx",[],"/home/kwame/regs/taskit/src/components/tasks/taskCard.tsx",[],"/home/kwame/regs/taskit/src/components/projects_home/projectsHome.tsx",["119"],"import React, { useEffect, useState } from 'react';\nimport ProjectSideBar from './projectsHomeSideBar';\nimport ProjectCard from './projectsCard';\nimport style from './projectHome.module.sass';\nimport NavBar from '../navbar/navBar';\nimport axios from 'axios';\nimport BottomNavBar from '../navbar/bottomNavBar';\n\nfunction ProjectsList() {\n    const [projects, setProjects] = useState<any[]>([]);\n    const [contributors, setContributors] = useState<any[]>([]);\n    function retrieveProjects() {\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n        axios.defaults.xsrfCookieName = \"csrftoken\";\n        const token = window.localStorage.getItem('token')\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        }\n        let api = \"http://127.0.0.1:8000/project/my-projects/\";\n        axios.get(api).then(response => {\n            console.log(response);\n            setProjects(response.data);\n            setContributors(response.data.contributors)\n\n        })\n    }\n\n    let theme = window.localStorage.getItem('theme');\n    if (theme == 'dark') {\n        document.body.classList.add('dark-body');\n        window.localStorage.setItem('theme', 'dark')\n    }\n    else {\n        document.body.classList.remove('dark-body');\n        window.localStorage.setItem('theme', 'light')\n    }\n\n    useEffect(() => {\n        // const interval = setInterval(() => {\n        //     retrieveProjects();\n        // }, 10000)\n        retrieveProjects()\n\n    }, [])\n\n    console.log(contributors)\n\n    return (\n        <div>\n            <ProjectSideBar />\n\n            <div className={style['main']}>\n                <div className={style['projects-nav-container']}>\n                    <NavBar />\n                </div>\n                <div className={style['project-nav-container-bottom']}>\n                    <BottomNavBar />\n                </div>\n\n                <div className={style['cover']}>\n                    {projects.map(project => {\n                        return (\n                            <div className={style['projects']} key={project.id}>\n                                <ProjectCard tasksCompleted={project.tasks_completed}\n                                    tasks_done={project.tasks_done} key={project.id}\n                                    title={project.title} priority={project.priority}\n                                    created={project.created} timesince={project.time_since_created}\n                                    icon_url={project.icon} contributors={project.contributors} id={project.id} />\n                            </div>\n\n\n\n                        )\n\n                    })}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProjectsList;","/home/kwame/regs/taskit/src/components/projects_home/projectsHomeSideBar.tsx",["120","121","122","123","124","125"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport style from \"./personalSideBar.module.sass\";\n\nfunction ProjectsSidebar() {\n  const [title, setTitle] = useState(\"\");\n  let num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  const [dark, setDark] = useState(\"\");\n\n  function showNav() {\n    let nav = document.querySelectorAll(\".nav\")[0] as HTMLDivElement;\n    nav.style.display = \"block\";\n    console.log(\"sd\");\n  }\n\n  const handleClick = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    console.log(\"Event\");\n    console.log(event.target);\n    setTitle(event.target.value);\n  };\n  function closeNav() {\n    let con = document.getElementsByClassName(style[\"head\"]);\n    console.log(con);\n    let nav = document.getElementsByClassName(style.nav)[0] as HTMLDivElement;\n    console.log(style.nav);\n    nav.style.width = \"0\";\n    nav.style.padding = \"0\";\n    nav.style.boxShadow = \"none\";\n  }\n\n  useEffect(() => {\n    let theme = window.localStorage.getItem(\"theme\");\n    let nav = document.getElementsByClassName(style.nav)[0];\n\n    let allLinks = (document.querySelectorAll(\n      `.${style[\"sec-links\"]}`\n    ) as any) as Array<HTMLAnchorElement>;\n    let allInsights = (document.querySelectorAll(\n      `.${style[\"anchor\"]}`\n    ) as any) as Array<HTMLAnchorElement>;\n    if (theme == \"dark\") {\n      document.body.classList.add(\"dark-body\");\n      nav.classList.add(\"dark-nav\");\n      //   allLinks.forEach((link: any) => {\n      //     link.classList.add(\"dark-link\");\n      //   });\n      for (let i = 0; i < allLinks.length; i++) {\n        allLinks[i].classList.add(\"dark-link\");\n      }\n      for (let i = 0; i < allInsights.length; i++) {\n        allInsights[i].classList.add(\"dark-insight\");\n      }\n      //   allInsights.forEach((insight: any) => {\n      //     insight.classList.add(\"dark-insight\");\n      //   });\n\n      window.localStorage.setItem(\"theme\", \"dark\");\n      setDark(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark-body\");\n      nav.classList.remove(\"dark-nav\");\n      //   allLinks.forEach((link: any) => {\n      //     link.classList.remove(\"dark-link\");\n      //   });\n      //   allInsights.forEach((insight: any) => {\n      //     insight.classList.remove(\"dark-insight\");\n      //   });\n      for (let i = 0; i < allLinks.length; i++) {\n        allLinks[i].classList.remove(\"dark-link\");\n      }\n      for (let i = 0; i < allInsights.length; i++) {\n        allInsights[i].classList.remove(\"dark-insight\");\n      }\n\n      window.localStorage.setItem(\"theme\", \"light\");\n      setDark(\"light\");\n    }\n  }, [dark]);\n\n  function setDarkMode() {\n    let theme = window.localStorage.getItem(\"theme\");\n\n    if (theme == \"dark\") {\n      window.localStorage.setItem(\"theme\", \"light\");\n      setDark(\"light\");\n    } else {\n      window.localStorage.setItem(\"theme\", \"dark\");\n      setDark(\"dark\");\n    }\n  }\n\n  return (\n    <div>\n      <div className={style.nav}>\n        <div className={style.close}>\n          <button onClick={closeNav} className={style[\"close-button\"]}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n\n        <div className={style.head}>\n          <span className={`material-icons ${style[\"icon-chart\"]}`}>\n            stacked_line_chart\n          </span>\n          <div>Dash</div>\n        </div>\n\n        <div className={style[\"nav-items\"]}>\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">assessment</span>\n              All Projects\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">extension</span>\n              Activities\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">extension</span>\n              Features\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">notes</span>\n              Personal Notes\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">local_atm</span>\n              Personal Budget\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                speaker_notes\n              </span>\n              Personal notes\n            </div>\n          </Link>\n\n          <Link to=\"/\" className={style[\"sec-links\"]}>\n            <div className={style[\"elements\"]}>\n              <span className=\"material-icons ml-4 mr-2 icon\">\n                calendar_today\n              </span>\n              Personal Tasks\n            </div>\n          </Link>\n        </div>\n\n        <hr className={\"ruler\"} />\n        <div className={style[\"insights\"]}>\n          <h3>Insights</h3>\n\n          <div className={style[\"container\"]}>\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={style[\"elements\"]}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  all_inbox\n                </span>\n                Inbox\n              </div>\n            </Link>\n\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={style[\"elements\"]}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  all_inbox\n                </span>\n                Mail\n                <span id={style[\"notifications\"]}>3</span>\n              </div>\n            </Link>\n\n            <Link className={style[\"anchor\"]} to=\"/\">\n              <div className={style[\"elements\"]}>\n                <span className={`${style[\"icon\"]} material-icons`}>\n                  notifications_none\n                </span>\n                Notification\n              </div>\n            </Link>\n          </div>\n        </div>\n        <hr className={style[\"ruler\"]} />\n        <div className={style[\"insights\"]}>\n          <h3>Theme</h3>\n          <div className={style[\"theme-container\"]}>\n            <div className={style[\"theme-elements\"]}>\n              <button onClick={setDarkMode} className=\"dark\">\n                Toggle Dark Mode\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectsSidebar;\n","/home/kwame/regs/taskit/src/components/projects_home/projectsCard.tsx",["126","127","128","129"],"import React from 'react';\nimport style from './projectsCard.module.sass';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction renderPriority(level: string) {\n\n\n    console.log(level, level)\n    if (level === 'H') {\n        return (\n\n            <button className={`${style['high']}`}>\n                HIGH PRIORITY\n            </button>\n\n        )\n    }\n    else if (level === 'M') {\n        return (\n            <button className={`${style['medium']} medium`}>\n                MEDIUM PRIORITY\n            </button>\n        )\n    }\n    else {\n        return (\n\n            <button className={`${style['low']} low`}>\n                LOW PRIORITY\n            </button>\n\n        )\n    }\n}\n\n\nfunction convertToDate(date: string) {\n    let newDate = new Date(date);\n    let convertedDate = `${newDate.getDay()}/${newDate.getMonth()}/${newDate.getFullYear()}`\n    return convertedDate;\n}\n\n\n\nfunction ProjectCard(props: any) {\n    console.log(props.contributors)\n    const linkStyle = {\n        'text-decoration': 'none',\n        'color': 'black'\n    }\n\n    function renderIconOrRenderFirstLetterInName(icon_url: any) {\n        const backgroundStyle = {\n            'backgroundImage': `url(${icon_url})`\n        }\n        if (icon_url != null) {\n            return (\n                <span style={backgroundStyle} className={style[\"project-logo\"]}></span>\n            )\n        }\n        else {\n            return (\n                <span className={style['icon-no-show']}>\n                    {props.title.slice(0, 1)}\n                </span>\n            )\n        }\n    }\n    console.log(props.contributors[2])\n    // let contributors = props.contributors[5]\n    // let lengthOfContributors = props.contributors.length\n    // let subtractedLength = contributors.length - lengthOfContributors\n\n    function renderAvatarOrFirstLetterInName(contributor: any) {\n        const contributorBackGround = {\n            'backgroundImage': `url(${contributor.profile_image})`\n        }\n        if (contributor.profile_image != null) {\n            return (\n                <div style={contributorBackGround} className={style['contributor-avatar']}></div>\n            )\n        }\n\n    }\n    let theme = window.localStorage.getItem('theme');\n    if (theme == 'dark') {\n        let card = document.querySelector(style['project-card-body']);\n        console.log(card)\n        card?.classList.add('project-card-body-dark')\n        window.localStorage.setItem('theme', 'dark')\n    }\n    else {\n        document.body.classList.remove('dark-body');\n        window.localStorage.setItem('theme', 'light')\n    }\n\n    const widthStyle = {\n        'width': `${props.tasksCompleted}%`\n    }\n    return (\n        <div>\n            <Link style={linkStyle} to={`project/${props.id}`}>\n                <div className={style['project-card-body']}>\n                    <div className={style[\"project-card-top\"]}>\n                        <div className={style['imp']}>\n                            {/* <span className={style[\"project-logo\"]}></span> */}\n                            {renderIconOrRenderFirstLetterInName(props.icon_url)}\n                            <p className={style['project-title']}>{props.title}</p>\n                        </div>\n\n                        <div className={style['logos']}>\n                            <span className={`${style['star-icon']} material-icons`}>\n                                star\n                        </span>\n                            <span className={`${style['more-icon']} material-icons`}>\n                                more_vert\n                        </span>\n                        </div>\n\n                    </div>\n                    <div className={style['progress-priority']}>\n                        <button className={style['select-progress']}>\n                            SELECT PROGRESS\n                    </button>\n                        {/* {props.priority === \"M\" ? \"\" : \"ldfj\"} */}\n                        {renderPriority(props.priority)}\n                    </div>\n                    <div className={style['tasks-done']}>\n                        Tasks Done: {props.tasks_done}\n                    </div>\n\n                    <div className={style['progress-group']}>\n                        <div className={style['tasks-completed-back']}>\n                            <div className={style['tasks-completed']} style={widthStyle}></div>\n                        </div>\n                    </div>\n\n                    <div className={style['tag-group']}>\n                        <button className={style['tag']}>\n                            ISO APP\n                    </button>\n                    </div>\n\n                    <div className={style['project-contributors-avatars']}>\n                        {/* {contributors.map(contribut => {\n\n                        return (\n                            <div key={contribut} className={style['contributor-avatar']}></div>\n                        )\n                    })} */}\n\n                        <div className={style['contributor-avatar']}></div>\n                        <div className={style['contributor-avatar']}></div>\n                        <div className={style['contributor-avatar']}></div>\n                        <div className={style['contributor-avatar']}></div>\n                        {/* {contributors.map((contributer: any) => {\n                        return (\n                            renderAvatarOrFirstLetterInName(contributer)\n                        )\n                    })} */}\n                        <div className={style['more-avatar']}>+{2}</div>\n                    </div>\n\n                    <div className={style['project-due-date']}>\n                        <div className={style['due-date']}>\n                            CREATED: {props.timesince}\n                        </div>\n                    </div>\n\n\n                </div>\n            </Link>\n\n        </div>\n    )\n}\n\nexport default ProjectCard;","/home/kwame/regs/taskit/src/components/login_register/login.tsx",["130"],"import React, { useState } from \"react\";\nimport login_style from \"./login.module.sass\";\nimport axios from \"axios\";\n\nfunction Login() {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    let loader = document.querySelector(\".loader\") as HTMLDivElement;\n    let api = \"http://127.0.0.1:8000/users/login/\";\n    if (credentials[\"email\"].length === 0) {\n      console.log(\"Enter email\");\n    } else {\n      axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n      axios.defaults.xsrfCookieName = \"csrftoken\";\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      let credentailJSON = JSON.stringify(credentials);\n      axios\n        .post(api, credentailJSON)\n        .then((response) => {\n          window.localStorage.setItem(\"token\", response.data);\n        })\n        .catch((error) => {\n          alert(error.response.data);\n          let box = document.getElementById(\"in\") as HTMLInputElement;\n          box.style.border = \"2px solid tomato\";\n          box.style.borderColor = \"tomato\";\n          console.log(box);\n        });\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div className={login_style[\"login-container\"]}>\n      <div className={login_style[\"inner-container\"]}>\n        <div className={login_style[\"form-group\"]}>\n          <form\n            action=\"\"\n            onSubmit={handleSubmit}\n            className={login_style[\"login-form\"]}\n          >\n            <div className={login_style[\"text-group\"]}>\n              <h3 className={login_style[\"log\"]}>Sign in to Projet</h3>\n              <p className={login_style[\"lo\"]}>\n                Sign in with email and password\n              </p>\n            </div>\n            <input\n              id={\"in\"}\n              name=\"email\"\n              onChange={handleChange}\n              type=\"email\"\n              placeholder=\"example@email.com\"\n            />\n            <input\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n            <button className={login_style[\"login-button\"]} type=\"submit\">\n              Sign In\n            </button>\n            <div className={login_style[\"loader\"]}></div>\n          </form>\n        </div>\n      </div>\n      <div className={login_style[\"second-div\"]}></div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/kwame/regs/taskit/src/components/login_register/register.tsx",["131","132"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./register.module.sass\";\nimport axios from \"axios\";\n\nfunction Register() {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  });\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n    console.log(credentials);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    let api = \"http://127.0.0.1:8000/users/create/\";\n    if (credentials[\"email\"].length === 0) {\n      console.log(\"Enter email\");\n    } else {\n      axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n      axios.defaults.xsrfCookieName = \"csrftoken\";\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      let credentailJSON = JSON.stringify(credentials);\n      axios\n        .post(api, credentailJSON)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    }\n  };\n\n  function clickAnimation() {\n    let button = document.getElementById(\"\");\n  }\n\n  useEffect(() => {\n    document.body.classList.add(styles[\"register-back\"]);\n  });\n\n  return (\n    <div className={styles[\"form-container-register\"]}>\n      <div className={styles[\"actual-form-content\"]}>\n        <div className={styles[\"text-group\"]}>\n          <h3 className={styles[\"login-heading\"]}>Register</h3>\n          <p className={styles[\"login-text\"]}>Fill in the following fields</p>\n        </div>\n\n        <div className={styles[\"form-group\"]}>\n          <form\n            action=\"\"\n            onSubmit={handleSubmit}\n            className={styles[\"login-form\"]}\n          >\n            <input\n              className={styles[\"register-inputs\"]}\n              name=\"email\"\n              onChange={handleChange}\n              type=\"email\"\n              placeholder=\"example@email.com\"\n            />\n            <input\n              className={styles[\"register-inputs\"]}\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n            <input\n              className={styles[\"register-inputs\"]}\n              name=\"first_name\"\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"First Name\"\n            />\n            <input\n              className={styles[\"register-inputs\"]}\n              name=\"last_name\"\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Last Name\"\n            />\n            {/* <button className={styles[\"register-button\"]} type=\"submit\">\n              SUBMIT\n            </button> */}\n            <div\n              role=\"button\"\n              onClick={handleSubmit}\n              className={styles[\"register-button\"]}\n            >\n              SUBMIT\n            </div>\n            <div className=\"loader\"></div>\n          </form>\n        </div>\n      </div>\n\n      <div className={styles[\"info-container\"]}></div>\n    </div>\n  );\n}\n\nexport default Register;\n","/home/kwame/regs/taskit/src/components/login_register/logout.tsx",[],"/home/kwame/regs/taskit/src/components/navbar/bottomNavBar.tsx",["133"],"import React from \"react\";\nimport style from \"./bottomNavBar.module.sass\";\nimport styles from \"../projects_home/personalSideBar.module.sass\";\nimport stylo from \"../sidebar/SideBarHome.module.sass\";\n\nfunction BottomNavBar() {\n  const handleClick = (e: any) => {\n    e.target.classList.add(`${style[\"active\"]}`);\n  };\n  const handleNavOpening = () => {\n    let nav = document.getElementsByClassName(\n      styles[\"nav\"]\n    )[0] as HTMLDivElement;\n    let snav = document.getElementsByClassName(\n      stylo[\"nav\"]\n    )[0] as HTMLDivElement;\n    if (nav) {\n      nav.style.width = \"170px\";\n      nav.style.padding = \"20px\";\n    } else {\n      snav.style.width = \"170px\";\n      snav.style.padding = \"20px\";\n    }\n\n    console.log(nav);\n  };\n\n  return (\n    <div>\n      <div className={style[\"bottom-nav-container\"]}>\n        <div>\n          <span\n            onClick={handleNavOpening}\n            className={`material-icons ${style[\"bottom-icons\"]}`}\n          >\n            widgets\n          </span>\n        </div>\n\n        <div>\n          <span className={`material-icons ${style[\"bottom-icons\"]}`}>\n            sticky_note_2\n          </span>\n        </div>\n        <div>\n          <span\n            className={`material-icons ${style[\"bottom-icons\"]} ${style[\"add-button\"]}`}\n          >\n            add\n          </span>\n        </div>\n\n        <div>\n          <span className={`material-icons ${style[\"bottom-icons\"]}`}>\n            notifications\n          </span>\n          <div className={style[\"pulse\"]}></div>\n        </div>\n        <div>\n          <span className={`material-icons ${style[\"bottom-icons\"]}`}>\n            add_task\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BottomNavBar;\n","/home/kwame/regs/taskit/src/components/projects_home/projectDetail.tsx",["134","135","136","137","138","139","140","141","142"],"/home/kwame/regs/taskit/src/components/graphbox/graphBox.tsx",["143","144","145","146","147","148","149"],"import React from 'react';\nimport graph_style from './graphBox.module.sass';\nimport * as d3 from 'd3';\n\nfunction GraphBox(): JSX.Element {\n    const data = [\n        { 'time': 'At open', items: 25 },\n        { 'time': '11:00 PM', items: 0 }\n    ]\n    const drawLineChart = (data: any) => {\n        const svgWidth = 800, svgHeight = 400\n        const svg = d3.select('svg')\n            .attr('width', svgWidth)\n            .attr('height', svgHeight)\n\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n        const g = svg.append('g')\n            .attr('transform', `translate(${margin.left, margin.top})`)\n        const width = svgWidth - margin.left - margin.right\n        const heigth = svgHeight - margin.top - margin.bottom\n\n        const y = d3.scaleLinear()\n        //   .domain(d3.extent(data,(d:any) => d.items)\n        //   .range([heigth, 0])\n\n    }\n    return (\n        <div className={graph_style['graph-container']}>\n            <div className={graph_style['graph-parent']}>\n                <div className={graph_style['graph-title']}>\n                    <span><hr /></span>\n                    <span><hr /></span>\n                    <span><hr /></span>\n                    <span><hr /></span>\n                    <span><hr /></span>\n                </div>\n\n                <div className={`${graph_style['node']} ${graph_style['node1']}`}>M</div>\n\n\n                <div className={`${graph_style['node']} ${graph_style['node2']}`}>T</div>\n                <div className={`${graph_style['node']} ${graph_style['node3']}`}>W</div>\n                <div className={`${graph_style['node']} ${graph_style['node4']}`}>T</div>\n                <div className={`${graph_style['node']} ${graph_style['node5']}`}>F</div>\n                <div className={`${graph_style['node']} ${graph_style['node6']}`}>S</div>\n                <div className={`${graph_style['node']} ${graph_style['node7']}`}>S</div>\n\n            </div>\n\n\n\n\n        </div>\n        // <div>\n        //     <svg id='lineChart'></svg>\n        // </div>\n    )\n}\n\nexport default GraphBox;","/home/kwame/regs/taskit/src/components/tasks/tasksList.tsx",["150","151","152"],"import React, { useState, useEffect } from \"react\";\nimport list_styles from \"./tasksList.module.sass\";\nimport axios from \"axios\";\nimport TaskCard from \"../tasks/taskCard\";\nimport Sidebar from \"../sidebar/sideBar\";\nimport Navbar from \"../navbar/navBar\";\nimport CreateTaskModal from \"../modals/createTaskModal\";\nimport Strip from \"../tasks/taskStrip\";\n\nfunction TasksList({ match }: any) {\n  interface Tasks {\n    name: string;\n    description: string;\n    start_date: any;\n    due_date: any;\n    date_created: any;\n    completed: boolean;\n    date_completed: any;\n    assignees: Array<any>;\n    theme: string;\n    assignee_names: Array<any>;\n    total_number_of_assignees: any;\n  }\n\n  const [tasks, setTasks] = useState<any[]>([]);\n\n  function getProjectLists() {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    const token = window.localStorage.getItem(\"token\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n    let api = `http://127.0.0.1:8000/project/create-task-list/${match.params.id}/`;\n    axios.get(api).then((response) => {\n      setTasks(response.data);\n    });\n  }\n\n  useEffect(() => {\n    getProjectLists();\n  }, []);\n\n  function openModal() {\n    let modal = document.getElementById(\"create-task-modal\") as HTMLDivElement;\n    let overlay = document.getElementById(\"overlay\") as HTMLDivElement;\n    modal.style.display = \"block\";\n    overlay.style.display = \"block\";\n  }\n  function closeModal() {\n    let modal = document.getElementById(\"create-task-modal\") as HTMLDivElement;\n    let overlay = document.getElementById(\"overlay\") as HTMLDivElement;\n    modal.style.display = \"none\";\n    overlay.style.display = \"none\";\n  }\n\n  return (\n    <div>\n      <Sidebar projectId={match.params.id} />\n      <div className={list_styles[\"main\"]}>\n        <div className={list_styles[\"tasks-nav\"]}>\n          <Navbar />\n        </div>\n\n        <div className={list_styles[\"add-task-button\"]}>\n          <button onClick={openModal} className={list_styles[\"button\"]}>\n            <span className=\"material-icons\">playlist_add</span>\n          </button>\n        </div>\n\n        <div className={list_styles[\"tasks-cover\"]}>\n          {tasks.map((task) => {\n            return (\n              <div className={list_styles[\"task-container\"]}>\n                {/* <TaskCard title={task.name} due={task.time_to_due_date} /> */}\n                <Strip\n                  name={task.name}\n                  due={task.time_to_due_date}\n                  starts={task.time_to_start_date}\n                  no_assignees={task.total_number_of_assignees}\n                  description={task.description}\n                  assignees={task.assignees_names}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div\n        id=\"create-task-modal\"\n        className={list_styles[\"create-modal-container\"]}\n      >\n        <div className={list_styles[\"cancel\"]}>\n          <i\n            onClick={closeModal}\n            className=\"fa fa-times close-modal\"\n            aria-hidden=\"true\"\n          ></i>\n        </div>\n\n        <CreateTaskModal id={match.params.id} close={closeModal} />\n      </div>\n\n      <div\n        onClick={closeModal}\n        id=\"overlay\"\n        className={list_styles[\"overlay\"]}\n      ></div>\n    </div>\n  );\n}\n\nexport default TasksList;\n","/home/kwame/regs/taskit/src/components/homepage/userHomepage.tsx",[],"/home/kwame/regs/taskit/src/components/team_card/teamCard.tsx",[],"/home/kwame/regs/taskit/src/components/modals/createTaskModal.tsx",["153","154","155"],"import React, { useState, useEffect } from \"react\";\nimport task_modal_style from \"./createTaskModal.module.sass\";\nimport axios from \"axios\";\n\nfunction CreateTaskModal(props: any) {\n  const [contributors, setContributors] = useState([]);\n  const [ids, setId] = useState<any[]>([]);\n\n  function getContributors() {\n    let api = `http://127.0.0.1:8000/project/contributors/${props.id}/accepted/`;\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    const token = window.localStorage.getItem(\"token\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n    axios.get(api).then((response) => {\n      setContributors(response.data);\n      console.log(response.data);\n    });\n  }\n\n  const [taskObjects, setTaskObjects] = useState({\n    name: \"\",\n    description: \"\",\n    start_date: \"\",\n    due_date: \"\",\n    assignees: [] as any,\n  });\n  const [times, setTime] = useState({\n    due_time: \"\",\n    start_time: \"\",\n  });\n  const handleTimeChange = (e: React.ChangeEvent<any>) => {\n    setTime({\n      ...times,\n      [e.target.name]: e.target.value,\n    });\n    console.log(times);\n  };\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setTaskObjects({\n      ...taskObjects,\n      [e.target.name]: e.target.value,\n    });\n    console.log(taskObjects);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    let api = `http://127.0.0.1:8000/project/create-task-list/${props.id}/`;\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    const token = window.localStorage.getItem(\"token\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n\n    taskObjects.start_date = `${taskObjects.start_date} ${times.start_time}`;\n    taskObjects.due_date = `${taskObjects.due_date} ${times.due_time}`;\n\n    ids.map((id: any) => {\n      taskObjects.assignees.push(parseInt(id));\n      console.log(parseInt(id));\n    });\n    axios\n      .post(api, taskObjects)\n      .then((response) => {\n        console.log(response);\n      })\n      .then((response) => {\n        let inputs = document.querySelectorAll(\"input\");\n        inputs.forEach((input: HTMLInputElement) => {\n          input.value = \"\";\n        });\n        let text = document.getElementById(\"desc\") as HTMLTextAreaElement;\n        text.value = \"\";\n      });\n  };\n\n  useEffect(() => {\n    getContributors();\n  }, []);\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    ids.push(e.currentTarget.id);\n    console.log(ids);\n  };\n\n  return (\n    <div className={task_modal_style[\"modal-container\"]}>\n      <div id={\"index\"}>\n        <div className={task_modal_style[\"modal\"]}>\n          <div className={task_modal_style[\"close_modal\"]}>\n            <i className=\"fa fa-times float-right\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div className={task_modal_style[\"modal-header\"]}>\n            <h3>Create a new task</h3>\n            <span className={task_modal_style[\"task-icon\"]}>\n              <i className={\"fa fa-tasks\"} aria-hidden=\"true\"></i>\n            </span>\n          </div>\n\n          <form\n            onSubmit={handleSubmit}\n            className={task_modal_style[\"create-task-form\"]}\n            action=\"\"\n          >\n            <input\n              onChange={handleChange}\n              placeholder=\"Title\"\n              className={task_modal_style[\"title-input\"]}\n              type=\"text\"\n              name=\"name\"\n              id={\"title\"}\n            />\n            <div className={task_modal_style[\"theme-colors\"]}>\n              <span>Color</span>\n              <div className={task_modal_style[\"color\"]}></div>\n              <div className={task_modal_style[\"color\"]}></div>\n              <div className={task_modal_style[\"color\"]}></div>\n              <div className={task_modal_style[\"color\"]}></div>\n            </div>\n            <div className={task_modal_style[\"des\"]}>\n              <textarea\n                onChange={handleChange}\n                placeholder=\"Description....\"\n                className={task_modal_style[\"description\"]}\n                name=\"description\"\n                id=\"desc\"\n                cols={30}\n                rows={10}\n              ></textarea>\n            </div>\n\n            <div className={task_modal_style[\"input-stack\"]}>\n              <div className={task_modal_style[\"label\"]}>\n                <label htmlFor=\"start-date\">Starts:</label>\n              </div>\n              <input\n                name={\"start_date\"}\n                onChange={handleChange}\n                className={`${task_modal_style[\"start-date\"]} ${task_modal_style[\"date-inputs\"]}`}\n                type=\"date\"\n                id=\"\"\n                placeholder=\"Start Date\"\n              />\n              <input\n                name={\"start_time\"}\n                onChange={handleTimeChange}\n                className={`${task_modal_style[\"start-time\"]} ${task_modal_style[\"time-inputs\"]}`}\n                type=\"time\"\n                id=\"\"\n              />\n\n              <div className={task_modal_style[\"label\"]}>\n                <label htmlFor=\"end-date\">Ends:</label>\n              </div>\n              <input\n                name={\"due_date\"}\n                onChange={handleChange}\n                className={`${task_modal_style[\"end-date\"]} ${task_modal_style[\"date-inputs\"]}`}\n                type=\"date\"\n                id=\"end-date\"\n              />\n              <input\n                onChange={handleTimeChange}\n                name={\"due_time\"}\n                className={`${task_modal_style[\"end-time\"]} ${task_modal_style[\"time-inputs\"]}`}\n                type=\"time\"\n                id=\"\"\n              />\n            </div>\n\n            <div className={task_modal_style[\"assignee-list\"]}>\n              <span>Assign to:</span>\n              {contributors.map((contributor: any) => {\n                const url = `http://127.0.0.1:8000${contributor.profile_image}/`;\n                const imageStyle = {\n                  backgroundImage: `url(${url})`,\n                };\n                return (\n                  <div className={task_modal_style[\"contributor-container\"]}>\n                    {contributor.profile_image === null ? (\n                      <div className={task_modal_style[\"contributor-avatar\"]}>\n                        {contributor.user_email.slice(0, 1).toUpperCase()}\n                      </div>\n                    ) : (\n                      <div\n                        style={imageStyle}\n                        className={\n                          task_modal_style[\"contributor-profile-image\"]\n                        }\n                      ></div>\n                    )}\n\n                    <div className={task_modal_style[\"contributor-name\"]}>\n                      {contributor.user_email}\n                    </div>\n                    <div className={task_modal_style[\"button-pack\"]}>\n                      <button\n                        id={contributor.user}\n                        onClick={handleClick}\n                        className={task_modal_style[\"add-contributor-button\"]}\n                      >\n                        <i className={\"fa fa-plus\"} aria-hidden=\"true\"></i>\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            <div className={task_modal_style[\"create-cancel-pack\"]}>\n              <button\n                type=\"button\"\n                onClick={props.close}\n                className={task_modal_style[\"cancel\"]}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className={task_modal_style[\"create\"]}>\n                Create\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateTaskModal;\n","/home/kwame/regs/taskit/src/components/tasks/taskStrip.tsx",["156","157"],"/home/kwame/regs/taskit/src/components/modals/addMember.tsx",["158","159","160","161","162","163"],{"ruleId":"164","severity":1,"message":"165","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":11},{"ruleId":"164","severity":1,"message":"168","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":15},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"164","severity":1,"message":"173","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"174","line":9,"column":17,"nodeType":"166","messageId":"167","endLine":9,"endColumn":25},{"ruleId":"164","severity":1,"message":"175","line":10,"column":7,"nodeType":"166","messageId":"167","endLine":10,"endColumn":10},{"ruleId":"164","severity":1,"message":"176","line":13,"column":12,"nodeType":"166","messageId":"167","endLine":13,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":31,"column":15,"nodeType":"179","messageId":"180","endLine":31,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":89,"column":15,"nodeType":"179","messageId":"180","endLine":89,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":50,"column":15,"nodeType":"183","endLine":50,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":50,"column":15,"nodeType":"183","endLine":50,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":52,"column":15,"nodeType":"183","endLine":52,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":30,"column":15,"nodeType":"179","messageId":"180","endLine":30,"endColumn":17},{"ruleId":"164","severity":1,"message":"186","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":15},{"ruleId":"164","severity":1,"message":"175","line":8,"column":7,"nodeType":"166","messageId":"167","endLine":8,"endColumn":10},{"ruleId":"164","severity":1,"message":"176","line":11,"column":12,"nodeType":"166","messageId":"167","endLine":11,"endColumn":19},{"ruleId":"164","severity":1,"message":"187","line":17,"column":9,"nodeType":"166","messageId":"167","endLine":17,"endColumn":20},{"ruleId":"177","severity":1,"message":"178","line":42,"column":15,"nodeType":"179","messageId":"180","endLine":42,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":84,"column":15,"nodeType":"179","messageId":"180","endLine":84,"endColumn":17},{"ruleId":"164","severity":1,"message":"188","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"164","severity":1,"message":"189","line":37,"column":10,"nodeType":"166","messageId":"167","endLine":37,"endColumn":23},{"ruleId":"164","severity":1,"message":"190","line":74,"column":14,"nodeType":"166","messageId":"167","endLine":74,"endColumn":45},{"ruleId":"177","severity":1,"message":"178","line":86,"column":15,"nodeType":"179","messageId":"180","endLine":86,"endColumn":17},{"ruleId":"164","severity":1,"message":"191","line":13,"column":9,"nodeType":"166","messageId":"167","endLine":13,"endColumn":15},{"ruleId":"164","severity":1,"message":"192","line":45,"column":12,"nodeType":"166","messageId":"167","endLine":45,"endColumn":26},{"ruleId":"164","severity":1,"message":"193","line":46,"column":9,"nodeType":"166","messageId":"167","endLine":46,"endColumn":15},{"ruleId":"164","severity":1,"message":"187","line":7,"column":9,"nodeType":"166","messageId":"167","endLine":7,"endColumn":20},{"ruleId":"164","severity":1,"message":"194","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"195","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":23},{"ruleId":"164","severity":1,"message":"196","line":45,"column":10,"nodeType":"166","messageId":"167","endLine":45,"endColumn":14},{"ruleId":"164","severity":1,"message":"197","line":45,"column":16,"nodeType":"166","messageId":"167","endLine":45,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":77,"column":6,"nodeType":"200","endLine":77,"endColumn":8,"suggestions":"201"},{"ruleId":"164","severity":1,"message":"202","line":83,"column":9,"nodeType":"166","messageId":"167","endLine":83,"endColumn":19},{"ruleId":"164","severity":1,"message":"203","line":87,"column":9,"nodeType":"166","messageId":"167","endLine":87,"endColumn":19},{"ruleId":"164","severity":1,"message":"204","line":91,"column":9,"nodeType":"166","messageId":"167","endLine":91,"endColumn":19},{"ruleId":"164","severity":1,"message":"205","line":99,"column":9,"nodeType":"166","messageId":"167","endLine":99,"endColumn":13},{"ruleId":"164","severity":1,"message":"206","line":6,"column":11,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"207","line":10,"column":11,"nodeType":"166","messageId":"167","endLine":10,"endColumn":24},{"ruleId":"164","severity":1,"message":"208","line":17,"column":15,"nodeType":"166","messageId":"167","endLine":17,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":18,"column":56,"nodeType":"211","messageId":"212","endLine":18,"endColumn":57},{"ruleId":"164","severity":1,"message":"213","line":19,"column":15,"nodeType":"166","messageId":"167","endLine":19,"endColumn":20},{"ruleId":"164","severity":1,"message":"214","line":20,"column":15,"nodeType":"166","messageId":"167","endLine":20,"endColumn":21},{"ruleId":"164","severity":1,"message":"215","line":22,"column":15,"nodeType":"166","messageId":"167","endLine":22,"endColumn":16},{"ruleId":"164","severity":1,"message":"194","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"216","line":11,"column":13,"nodeType":"166","messageId":"167","endLine":11,"endColumn":18},{"ruleId":"198","severity":1,"message":"217","line":43,"column":6,"nodeType":"200","endLine":43,"endColumn":8,"suggestions":"218"},{"ruleId":"164","severity":1,"message":"219","line":7,"column":15,"nodeType":"166","messageId":"167","endLine":7,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":65,"column":23,"nodeType":"222","messageId":"223","endLine":65,"endColumn":25},{"ruleId":"198","severity":1,"message":"224","line":86,"column":6,"nodeType":"200","endLine":86,"endColumn":8,"suggestions":"225"},{"ruleId":"164","severity":1,"message":"226","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":78,"column":13,"nodeType":"183","endLine":78,"endColumn":80},{"ruleId":"164","severity":1,"message":"229","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":17},{"ruleId":"164","severity":1,"message":"219","line":8,"column":15,"nodeType":"166","messageId":"167","endLine":8,"endColumn":20},{"ruleId":"164","severity":1,"message":"230","line":9,"column":18,"nodeType":"166","messageId":"167","endLine":9,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":17,"column":15,"nodeType":"233","messageId":"234","endLine":17,"endColumn":26,"fix":"235"},{"ruleId":"236","severity":1,"message":"237","line":31,"column":30,"nodeType":"166","messageId":"238","endLine":31,"endColumn":34},{"ruleId":"198","severity":1,"message":"224","line":59,"column":6,"nodeType":"200","endLine":59,"endColumn":8,"suggestions":"239"},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","no-native-reassign",["240"],"no-negated-in-lhs",["241"],"'HomeCard' is defined but never used.","'setTitle' is assigned a value but never used.","'num' is assigned a value but never used.","'showNav' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'title' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'useHistory' is defined but never used.","'convertToDate' is defined but never used.","'renderAvatarOrFirstLetterInName' is defined but never used.","'loader' is assigned a value but never used.","'clickAnimation' is defined but never used.","'button' is assigned a value but never used.","'TaskCard' is defined but never used.","'CreateTaskModal' is defined but never used.","'team' is assigned a value but never used.","'setTeam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjectDetails'. Either include it or remove the dependency array.","ArrayExpression",["242"],"'ring1Style' is assigned a value but never used.","'ring2Style' is assigned a value but never used.","'ring3Style' is assigned a value but never used.","'nums' is assigned a value but never used.","'data' is assigned a value but never used.","'drawLineChart' is assigned a value but never used.","'g' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'width' is assigned a value but never used.","'heigth' is assigned a value but never used.","'y' is assigned a value but never used.","'Tasks' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjectLists'. Either include it or remove the dependency array.",["243"],"'setId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getContributors'. Either include it or remove the dependency array.",["244"],"'SyntaxHighlighter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'userEvent' is defined but never used.","'setNew' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"245","text":"246"},"no-self-assign","'data' is assigned to itself.","selfAssignment",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},[546,557],"[]",{"desc":"252","fix":"254"},"Update the dependencies array to be: [getProjectDetails]",{"range":"255","text":"256"},"Update the dependencies array to be: [getProjectLists]",{"range":"257","text":"258"},"Update the dependencies array to be: [getContributors]",{"range":"259","text":"260"},{"range":"261","text":"260"},[2403,2405],"[getProjectDetails]",[1254,1256],"[getProjectLists]",[2526,2528],"[getContributors]",[1922,1924]]